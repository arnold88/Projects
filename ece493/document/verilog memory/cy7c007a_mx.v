// Generated by vsg 01042

`timescale 100ps / 100ps
module cy7c007a_mx(
  al_0,
  al_1,
  al_2,
  al_3,
  al_4,
  al_5,
  al_6,
  al_7,
  al_8,
  al_9,
  al_10,
  al_11,
  al_12,
  al_13,
  al_14,
  ar_0,
  ar_1,
  ar_2,
  ar_3,
  ar_4,
  ar_5,
  ar_6,
  ar_7,
  ar_8,
  ar_9,
  ar_10,
  ar_11,
  ar_12,
  ar_13,
  ar_14,
  cel_n,
  cer_n,
  iol_0,
  iol_1,
  iol_2,
  iol_3,
  iol_4,
  iol_5,
  iol_6,
  iol_7,
  ior_0,
  ior_1,
  ior_2,
  ior_3,
  ior_4,
  ior_5,
  ior_6,
  ior_7,
  oel_n,
  oer_n,
  r_w_nl,
  r_w_nr,
  seml_n,
  semr_n,
  intl_n,
  intr_n,
  busyl_n,
  busyr_n,
  m_s_n );

  // Pin declarations 
  input  al_0;
  input  al_1;
  input  al_2;
  input  al_3;
  input  al_4;
  input  al_5;
  input  al_6;
  input  al_7;
  input  al_8;
  input  al_9;
  input  al_10;
  input  al_11;
  input  al_12;
  input  al_13;
  input  al_14;
  input  ar_0;
  input  ar_1;
  input  ar_2;
  input  ar_3;
  input  ar_4;
  input  ar_5;
  input  ar_6;
  input  ar_7;
  input  ar_8;
  input  ar_9;
  input  ar_10;
  input  ar_11;
  input  ar_12;
  input  ar_13;
  input  ar_14;
  input  cel_n;
  input  cer_n;
  inout  iol_0;
  reg    iol_0__PULL;
  reg    iol_0__STRONG;
  assign (pull0, pull1) iol_0 = iol_0__PULL;
  assign iol_0 = iol_0__STRONG;
  inout  iol_1;
  reg    iol_1__PULL;
  reg    iol_1__STRONG;
  assign (pull0, pull1) iol_1 = iol_1__PULL;
  assign iol_1 = iol_1__STRONG;
  inout  iol_2;
  reg    iol_2__PULL;
  reg    iol_2__STRONG;
  assign (pull0, pull1) iol_2 = iol_2__PULL;
  assign iol_2 = iol_2__STRONG;
  inout  iol_3;
  reg    iol_3__PULL;
  reg    iol_3__STRONG;
  assign (pull0, pull1) iol_3 = iol_3__PULL;
  assign iol_3 = iol_3__STRONG;
  inout  iol_4;
  reg    iol_4__PULL;
  reg    iol_4__STRONG;
  assign (pull0, pull1) iol_4 = iol_4__PULL;
  assign iol_4 = iol_4__STRONG;
  inout  iol_5;
  reg    iol_5__PULL;
  reg    iol_5__STRONG;
  assign (pull0, pull1) iol_5 = iol_5__PULL;
  assign iol_5 = iol_5__STRONG;
  inout  iol_6;
  reg    iol_6__PULL;
  reg    iol_6__STRONG;
  assign (pull0, pull1) iol_6 = iol_6__PULL;
  assign iol_6 = iol_6__STRONG;
  inout  iol_7;
  reg    iol_7__PULL;
  reg    iol_7__STRONG;
  assign (pull0, pull1) iol_7 = iol_7__PULL;
  assign iol_7 = iol_7__STRONG;
  inout  ior_0;
  reg    ior_0__PULL;
  reg    ior_0__STRONG;
  assign (pull0, pull1) ior_0 = ior_0__PULL;
  assign ior_0 = ior_0__STRONG;
  inout  ior_1;
  reg    ior_1__PULL;
  reg    ior_1__STRONG;
  assign (pull0, pull1) ior_1 = ior_1__PULL;
  assign ior_1 = ior_1__STRONG;
  inout  ior_2;
  reg    ior_2__PULL;
  reg    ior_2__STRONG;
  assign (pull0, pull1) ior_2 = ior_2__PULL;
  assign ior_2 = ior_2__STRONG;
  inout  ior_3;
  reg    ior_3__PULL;
  reg    ior_3__STRONG;
  assign (pull0, pull1) ior_3 = ior_3__PULL;
  assign ior_3 = ior_3__STRONG;
  inout  ior_4;
  reg    ior_4__PULL;
  reg    ior_4__STRONG;
  assign (pull0, pull1) ior_4 = ior_4__PULL;
  assign ior_4 = ior_4__STRONG;
  inout  ior_5;
  reg    ior_5__PULL;
  reg    ior_5__STRONG;
  assign (pull0, pull1) ior_5 = ior_5__PULL;
  assign ior_5 = ior_5__STRONG;
  inout  ior_6;
  reg    ior_6__PULL;
  reg    ior_6__STRONG;
  assign (pull0, pull1) ior_6 = ior_6__PULL;
  assign ior_6 = ior_6__STRONG;
  inout  ior_7;
  reg    ior_7__PULL;
  reg    ior_7__STRONG;
  assign (pull0, pull1) ior_7 = ior_7__PULL;
  assign ior_7 = ior_7__STRONG;
  input  oel_n;
  input  oer_n;
  input  r_w_nl;
  input  r_w_nr;
  input  seml_n;
  input  semr_n;
  output intl_n;
  reg    intl_n__PULL;
  reg    intl_n__STRONG;
  assign (pull0, pull1) intl_n = intl_n__PULL;
  assign intl_n = intl_n__STRONG;
  output intr_n;
  reg    intr_n__PULL;
  reg    intr_n__STRONG;
  assign (pull0, pull1) intr_n = intr_n__PULL;
  assign intr_n = intr_n__STRONG;
  inout  busyl_n;
  reg    busyl_n__PULL;
  reg    busyl_n__STRONG;
  assign (pull0, pull1) busyl_n = busyl_n__PULL;
  assign busyl_n = busyl_n__STRONG;
  inout  busyr_n;
  reg    busyr_n__PULL;
  reg    busyr_n__STRONG;
  assign (pull0, pull1) busyr_n = busyr_n__PULL;
  assign busyr_n = busyr_n__STRONG;
  input  m_s_n;

  // Allowed timing versions: 
  //  Device Name             TimingVersion
  //  ===========             =============

  // Parameter declarations 
  parameter  ModelType = "SWIFT";
  parameter  DefaultData = "11111111";
  parameter  DelayRange = "Max";
  parameter  MemoryFile = ".";
  parameter  MessageLevel = "15";
  parameter  ModelAlias = ".";
  parameter  ModelConfig = "32'h0";
  parameter  ModelId = "-2";
  parameter  TimingVersion = "12";

  // Invoke the model 
  initial
    begin
      $lm_model(
        "cy7c007a_mx_lmtv",
        ModelType,
        "attr", "defaultdata", DefaultData,
        "attr", "delayrange", DelayRange,
        "attr", "memoryfile", MemoryFile,
        "attr", "messagelevel", MessageLevel,
        "attr", "modelalias", ModelAlias,
        "attr", "modelconfig", ModelConfig,
        "attr", "modelid", ModelId,
        "attr", "timingversion", TimingVersion,
        "in", al_0,
        "in", al_1,
        "in", al_2,
        "in", al_3,
        "in", al_4,
        "in", al_5,
        "in", al_6,
        "in", al_7,
        "in", al_8,
        "in", al_9,
        "in", al_10,
        "in", al_11,
        "in", al_12,
        "in", al_13,
        "in", al_14,
        "in", ar_0,
        "in", ar_1,
        "in", ar_2,
        "in", ar_3,
        "in", ar_4,
        "in", ar_5,
        "in", ar_6,
        "in", ar_7,
        "in", ar_8,
        "in", ar_9,
        "in", ar_10,
        "in", ar_11,
        "in", ar_12,
        "in", ar_13,
        "in", ar_14,
        "in", cel_n,
        "in", cer_n,
        "io", iol_0, iol_0__STRONG, iol_0__PULL,
        "io", iol_1, iol_1__STRONG, iol_1__PULL,
        "io", iol_2, iol_2__STRONG, iol_2__PULL,
        "io", iol_3, iol_3__STRONG, iol_3__PULL,
        "io", iol_4, iol_4__STRONG, iol_4__PULL,
        "io", iol_5, iol_5__STRONG, iol_5__PULL,
        "io", iol_6, iol_6__STRONG, iol_6__PULL,
        "io", iol_7, iol_7__STRONG, iol_7__PULL,
        "io", ior_0, ior_0__STRONG, ior_0__PULL,
        "io", ior_1, ior_1__STRONG, ior_1__PULL,
        "io", ior_2, ior_2__STRONG, ior_2__PULL,
        "io", ior_3, ior_3__STRONG, ior_3__PULL,
        "io", ior_4, ior_4__STRONG, ior_4__PULL,
        "io", ior_5, ior_5__STRONG, ior_5__PULL,
        "io", ior_6, ior_6__STRONG, ior_6__PULL,
        "io", ior_7, ior_7__STRONG, ior_7__PULL,
        "in", oel_n,
        "in", oer_n,
        "in", r_w_nl,
        "in", r_w_nr,
        "in", seml_n,
        "in", semr_n,
        "out", intl_n, intl_n__STRONG, intl_n__PULL,
        "out", intr_n, intr_n__STRONG, intr_n__PULL,
        "io", busyl_n, busyl_n__STRONG, busyl_n__PULL,
        "io", busyr_n, busyr_n__STRONG, busyr_n__PULL,
        "in", m_s_n );
    end

endmodule
